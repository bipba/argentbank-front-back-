{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nconst baseURL = 'http://localhost:3001/api/v1/user/';\n\n// Actions\nexport const getUserSuccess = createAction(user => ({\n  payload: user\n}));\nexport const getUserError = createAction('GET_USER_ERROR', error => ({\n  payload: error\n}));\nexport const logout = createAction('LOGOUT_USER');\nexport const editUser = createAction('EDIT_USER');\nexport const editUserSuccess = createAction('EDIT_USER_SUCCESS', user => ({\n  payload: user\n}));\nexport const editUserError = createAction('EDIT_USER_ERROR', error => ({\n  payload: error\n}));\n\n// fonctions asynchrones (thunks)\nexport const loadUser = token => async dispatch => {\n  dispatch(getUserSuccess({\n    isLoading: true\n  }));\n  try {\n    const response = await fetch(`${baseURL}profile`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    dispatch(getUserSuccess({\n      user: data,\n      isLoading: false,\n      isLoggedIn: true\n    }));\n    return data;\n  } catch (error) {\n    dispatch(getUserError({\n      error: error.message,\n      isLoading: false,\n      isLoggedIn: false\n    }));\n    throw error;\n  }\n};\nexport const EditUser = userName => async dispatch => {\n  const token = localStorage.getItem('token');\n  dispatch(editUser());\n  try {\n    const response = await fetch(`${baseURL}profile`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        userName\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    dispatch(editUserSuccess(data));\n    dispatch(loadUser(token));\n  } catch (error) {\n    dispatch(editUserError(error.message));\n  }\n};","map":{"version":3,"names":["createAction","baseURL","getUserSuccess","user","payload","getUserError","error","logout","editUser","editUserSuccess","editUserError","loadUser","token","dispatch","isLoading","response","fetch","method","headers","ok","Error","status","data","json","isLoggedIn","message","EditUser","userName","localStorage","getItem","body","JSON","stringify"],"sources":["/Users/aa/Desktop/ArgentBank-main/frontend/src/store/Actions/UserAction.js"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst baseURL = 'http://localhost:3001/api/v1/user/';\n\n// Actions\nexport const getUserSuccess = createAction( (user) => ({ payload: user }));\nexport const getUserError = createAction('GET_USER_ERROR', (error) => ({ payload: error }));\nexport const logout = createAction('LOGOUT_USER');\nexport const editUser = createAction('EDIT_USER');\nexport const editUserSuccess = createAction('EDIT_USER_SUCCESS', (user) => ({ payload: user }));\nexport const editUserError = createAction('EDIT_USER_ERROR', (error) => ({ payload: error }));\n\n// fonctions asynchrones (thunks)\nexport const loadUser = (token) => async (dispatch) => {\n  dispatch(getUserSuccess({ isLoading: true }));\n\n  try {\n    const response = await fetch(`${baseURL}profile`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    dispatch(getUserSuccess({ user: data, isLoading: false, isLoggedIn: true }));\n    return data;\n  } catch (error) {\n    dispatch(getUserError({ error: error.message, isLoading: false, isLoggedIn: false }));\n    throw error;\n  }\n};\n\nexport const EditUser = (userName) => async (dispatch) => {\n  const token = localStorage.getItem('token');\n  dispatch(editUser());\n\n  try {\n    const response = await fetch(`${baseURL}profile`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({ userName }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    dispatch(editUserSuccess(data));\n    dispatch(loadUser(token));\n  } catch (error) {\n    dispatch(editUserError(error.message));\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}