{"ast":null,"code":"import { createAction } from \"@reduxjs/toolkit\";\nimport { loadUser } from \"./UserAction\";\nconst baseURL = \"http://localhost:3001/api/v1/user/\";\nexport const getTokenSuccess = createAction(\"GET_TOKEN_SUCCESS\", token => ({\n  payload: token\n}));\nexport const getTokenError = createAction(\"GET_TOKEN_ERROR\", error => ({\n  payload: error\n}));\nexport const loadToken = (email, password, navigate) => async dispatch => {\n  dispatch(getTokenSuccess({\n    isGetting: true\n  }));\n  try {\n    const response = await fetch(`${baseURL}login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const {\n      body: {\n        token\n      }\n    } = await response.json();\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem('email', email);\n    dispatch(getTokenSuccess({\n      token,\n      tokenTrue: true,\n      isGetting: false\n    }));\n    await dispatch(loadUser(token));\n    navigate(\"/user\");\n  } catch (error) {\n    dispatch(getTokenError({\n      error: error.message,\n      isGetting: false,\n      tokenTrue: false\n    }));\n  }\n};","map":{"version":3,"names":["createAction","loadUser","baseURL","getTokenSuccess","token","payload","getTokenError","error","loadToken","email","password","navigate","dispatch","isGetting","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","localStorage","setItem","tokenTrue","message"],"sources":["/Users/aa/Desktop/ArgentBank-back-front/frontend/src/store/Actions/TokenAction.js"],"sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport { loadUser } from \"./UserAction\";\n\nconst baseURL = \"http://localhost:3001/api/v1/user/\";\n\nexport const getTokenSuccess = createAction(\"GET_TOKEN_SUCCESS\", (token) => ({\n  payload: token,\n}));\nexport const getTokenError = createAction(\"GET_TOKEN_ERROR\", (error) => ({\n  payload: error,\n}));\n\nexport const loadToken = (email, password, navigate) => async (dispatch) => {\n  dispatch(getTokenSuccess({ isGetting: true }));\n\n  try {\n    const response = await fetch(`${baseURL}login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const {\n      body: { token },\n    } = await response.json();\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem('email', email);\n\n    dispatch(getTokenSuccess({ token, tokenTrue: true, isGetting: false }));\n\n    await dispatch(loadUser(token));\n    navigate(\"/user\");\n  } catch (error) {\n    dispatch(getTokenError({\n        error: error.message,\n        isGetting: false,\n        tokenTrue: false,\n      })\n    );\n  }\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,QAAQ,QAAQ,cAAc;AAEvC,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,OAAO,MAAMC,eAAe,GAAGH,YAAY,CAAC,mBAAmB,EAAGI,KAAK,KAAM;EAC3EC,OAAO,EAAED;AACX,CAAC,CAAC,CAAC;AACH,OAAO,MAAME,aAAa,GAAGN,YAAY,CAAC,iBAAiB,EAAGO,KAAK,KAAM;EACvEF,OAAO,EAAEE;AACX,CAAC,CAAC,CAAC;AAEH,OAAO,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1EA,QAAQ,CAACT,eAAe,CAAC;IAAEU,SAAS,EAAE;EAAK,CAAC,CAAC,CAAC;EAE9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,OAAQ,OAAM,EAAE;MAC9Cc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;IAC3D;IAEA,MAAM;MACJL,IAAI,EAAE;QAAEd;MAAM;IAChB,CAAC,GAAG,MAAMU,QAAQ,CAACU,IAAI,CAAC,CAAC;IAEzBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEtB,KAAK,CAAC;IACpCqB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEjB,KAAK,CAAC;IAEpCG,QAAQ,CAACT,eAAe,CAAC;MAAEC,KAAK;MAAEuB,SAAS,EAAE,IAAI;MAAEd,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;IAEvE,MAAMD,QAAQ,CAACX,QAAQ,CAACG,KAAK,CAAC,CAAC;IAC/BO,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdK,QAAQ,CAACN,aAAa,CAAC;MACnBC,KAAK,EAAEA,KAAK,CAACqB,OAAO;MACpBf,SAAS,EAAE,KAAK;MAChBc,SAAS,EAAE;IACb,CAAC,CACH,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}